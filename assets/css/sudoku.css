/*
================================================================================
|   SUDOKU APPLICATION STYLESHEET                                              |
|   -------------------------------------------------------------------------- |
|   Refactored for clarity and maintainability.                                |
|   Structure:                                                                 |
|   1. FRAMEWORK SETUP (TAILWIND & CSS PROPERTIES)                             |
|   2. CUSTOM THEME & VARIABLES                                                |
|   3. GLOBAL & BASE STYLES                                                    |
|   4. LAYOUT                                                                  |
|   5. COMPONENTS                                                              |
|   6. ANIMATIONS                                                              |
|   7. DARK MODE OVERRIDES                                                     |
|   8. RESPONSIVE STYLES                                                       |
================================================================================
*/

/*
================================================================================
|   1. FRAMEWORK SETUP (TAILWIND & CSS PROPERTIES)                             |
================================================================================
*/

/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
    ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *,
    :before,
    :after,
    ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
    }
  }
}
@layer theme {
  :root,
  :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      "Liberation Mono", "Courier New", monospace;
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-blue-300: oklch(76.58% 0.138 256.12);
    --color-blue-400: oklch(69.72% 0.175 258.11);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-orange-500: oklch(69.8% 0.19 50.5);
    --color-orange-600: oklch(64.5% 0.207 43.3);
    --color-orange-700: oklch(55.3% 0.195 38.402);
    --color-orange-800: oklch(47% 0.157 37.304);
    --color-indigo-500: oklch(62.55% 0.207 274.22);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-indigo-700: oklch(45.7% 0.24 277.023);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xl: 36rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --default-transition-duration: 0.15s;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *,
  :after,
  :before,
  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  html,
  :host {
    text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji"
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      "Liberation Mono",
      "Courier New",
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    display: block;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not ((-webkit-appearance: -apple-pay-button))) or
    (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }
    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }
  ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button {
    height: auto;
  }
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer components;
@layer utilities {
  .fixed {
    position: fixed;
  }
  .font-calligraphy {
    font-family: "Satisfy", cursive;
  }
  .shortcut-highlight {
    color: var(--color-indigo-700);
    font-weight: 600; /* semibold */
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .z-10 {
    z-index: 10;
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-full {
    width: 100%;
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .flex-grow {
    flex-grow: 1;
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
      var(--tw-skew-x) var(--tw-skew-y);
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-9 {
    grid-template-columns: repeat(9, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 2) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-700 {
    border-color: var(--color-gray-700);
  }
  .border-transparent {
    border-color: #0000;
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }
  .bg-orange-600 {
    background-color: var(--color-orange-600);
  }
  .bg-orange-700 {
    background-color: var(--color-orange-700);
  }
  .bg-orange-800 {
    background-color: var(--color-orange-800);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-green-600 {
    background-color: var(--color-green-600);
  }
  .bg-indigo-600 {
    background-color: var(--color-indigo-600);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .text-center {
    text-align: center;
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: 0.75rem; /* 12px */
    line-height: 1rem; /* 16px */
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-orange-500 {
    color: var(--color-orange-500);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .opacity-25 {
    opacity: 0.25;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a),
      0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a),
      0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a),
      0 8px 10px -6px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate,
      filter, -webkit-backdrop-filter, backdrop-filter, display,
      content-visibility, overlay, pointer-events;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  @media (hover: hover) {
    .hover\:bg-blue-700:hover {
      background-color: var(--color-blue-700);
    }
    .hover\:bg-gray-50:hover {
      background-color: var(--color-gray-50);
    }
    .hover\:bg-gray-100:hover {
      background-color: var(--color-gray-100);
    }
    .hover\:bg-gray-200:hover {
      background-color: var(--color-gray-200);
    }
    .hover\:bg-gray-300:hover {
      background-color: var(--color-gray-300);
    }
    .hover\:bg-green-700:hover {
      background-color: var(--color-green-700);
    }
    .hover\:bg-indigo-700:hover {
      background-color: var(--color-indigo-700);
    }
    .hover\:bg-orange-600:hover {
      background-color: var(--color-orange-600);
    }
  }
  .focus\:border-blue-500:focus {
    border-color: var(--color-blue-500);
  }
  .focus\:ring-blue-500:focus {
    --tw-ring-color: var(--color-blue-500);
  }
  @media (min-width: 40rem) {
    .sm\:w-1\/2 {
      width: 50%;
    }
    .sm\:w-auto {
      width: auto;
    }
    .sm\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    .sm\:flex-row {
      flex-direction: row;
    }
    .sm\:p-8 {
      padding: calc(var(--spacing) * 8);
    }
    .sm\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
}

/* --- Tailwind CSS Property Definitions --- */
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

/*
================================================================================
|   2. CUSTOM THEME & VARIABLES                                                |
================================================================================
*/
:root {
  --nc-bg-1: #e6e6fa;
  --nc-tx-1: #4b0082;
  --nc-accent-color: #8a2be2;
  --nc-accent-hover-color: #9d48ff;
  --nc-header-bg: #f2e6ff;
  --nc-border-color: #d8c0ff;
  --nc-text-light: #f0e6ff;
}

/*
================================================================================
|   3. GLOBAL & BASE STYLES                                                    |
================================================================================
*/
body {
  font-family: "Fira Code", "Nanum Gothic Coding", "M PLUS 1 Code", monospace;
  background-color: var(--nc-bg-1);
  color: var(--nc-tx-1);
}

/* Override Tailwind classes for main container & text */
.bg-white {
  background-color: var(--nc-header-bg) !important;
}

/* Forms */
select,
input[type="text"] {
  background-color: var(--nc-header-bg);
  border-color: var(--nc-border-color);
  color: var(--nc-tx-1);
}

/* Disabled Buttons */
button:disabled {
  background-color: var(--nc-border-color) !important;
  color: var(--nc-tx-1) !important;
  opacity: 0.5;
  cursor: not-allowed;
  border-color: transparent !important;
}
button:disabled:hover {
  background-color: var(--nc-border-color) !important;
}

/*
================================================================================
|   4. LAYOUT                                                                  |
================================================================================
*/

/* Message Area for displaying information to the user */
#message-area {
  min-height: 2.5rem;
  max-height: 3.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow-y: auto;
}

/*
================================================================================
|   5. COMPONENTS                                                              |
================================================================================
*/

/* --- Component: Difficulty Lamp --- */
#difficulty-lamp {
  width: 0.75rem; /* 12px */
  height: 2rem; /* 32px */
  border-radius: 0.25rem; /* 4px */
  border: 2px solid var(--nc-tx-1);
  transition: background-color 0.3s ease;
  flex-shrink: 0; /* Prevents the lamp from shrinking */
}
.lamp-white {
  background-color: #ffffff;
}
.lamp-green {
  background-color: #4ade80;
}
.lamp-yellow {
  background-color: #facc15;
}
.lamp-orange {
  background-color: #fb923c;
}
.lamp-red {
  background-color: #f87171;
}
.lamp-gray {
  background-color: #9ca3af;
}
.lamp-black {
  background-color: #111827;
}
/* --- Component: Sudoku Grid & Cells --- */
.sudoku-cell {
  width: 11.11%;
  padding-bottom: 11.11%;
  position: relative;
  border: 1px solid var(--nc-border-color);
  transition: background-color 0.2s;
  cursor: pointer;
}

.sudoku-cell .cell-content {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.75rem;
}

.sudoku-cell .user-value {
  color: var(--color-indigo-600);
}

.sudoku-cell .given-value {
  color: var(--nc-tx-1);
  font-weight: 600;
}

.sudoku-cell.invalid .user-value {
  background-color: #fecaca;
}

/* -- Cell States -- */
.sudoku-cell.selected {
  outline: 3px solid var(--color-indigo-500);
  outline-offset: -3px;
  z-index: 5;
}

@media (prefers-color-scheme: light) {
  .sudoku-cell.selected {
    outline: 3px solid var(--color-indigo-600);
    outline-offset: -3px;
    z-index: 5;
  }
}

.sudoku-cell.selected-green {
  outline: 3px solid #c084fc;
  outline-offset: -3px;
  z-index: 5;
}

/* -- Highlighting Behavior -- */
/* Default highlight for cells without a custom color */
.sudoku-cell.highlighted:not(.has-color) {
  background-color: var(--nc-border-color);
}

/* For cells that have a custom color, use an inset shadow to avoid overwriting the color */
.sudoku-cell.highlighted.has-color {
  box-shadow: inset 0 0 0 3px rgba(250, 204, 21, 0.18);
}

/* Add a glow effect to colored cells when highlighted */
.sudoku-cell.highlighted.has-color::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  border: 3px solid rgba(250, 204, 21, 0.6); /* yellow glow */
  pointer-events: none; /* don't block clicks */
}

/* -- 3x3 Box Borders -- */
.sudoku-grid .grid-row .sudoku-cell:nth-child(3),
.sudoku-grid .grid-row .sudoku-cell:nth-child(6) {
  border-right: 3px solid var(--nc-tx-1);
}

.sudoku-grid .grid-row:nth-child(3),
.sudoku-grid .grid-row:nth-child(6) {
  border-bottom: 3px solid var(--nc-tx-1);
}

/* --- Component: Pencil Marks --- */
.pencil-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  width: 100%;
  height: 100%;
  font-size: 0.9rem;
  /* color and opacity are now handled by .pencil-mark */
  text-align: center;
  line-height: 1.2;
}

.pencil-mark {
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  /* 1. Set the default color and opacity for UNCOLORED marks */
  color: var(--color-gray-700);
  opacity: 0.6;
  transition: opacity 0.2s; /* Optional: adds a smooth transition */
}

/* 2. NEW RULE: Target only pencil marks that have an inline color style */
.pencil-mark[style*="color"] {
  opacity: 1; /* Make them fully opaque */
}

/* --- Component: Controls & Buttons --- */
.control-btn.active {
  background-color: var(--color-indigo-600);
  color: white;
  border-color: var(--nc-accent-color);
}

@media (prefers-color-scheme: light) {
  .control-btn.active {
    background-color: var(--color-indigo-500);
  }
}

.control-btn.active-green {
  background-color: #c084fc;
  color: white;
  border-color: #c084fc;
}

.color-btn.selected {
  outline: 3px solid var(--nc-accent-color);
  outline-offset: 2px;
}

/* -- Number Pad -- */
#number-pad button {
  background-color: transparent;
  border-color: var(--nc-border-color);
  color: var(--nc-tx-1);
}

#number-pad button:hover {
  background-color: var(--nc-border-color);
}

/* --- Component: Modals --- */
#candidate-modal,
#date-modal {
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 50;
}
#candidate-modal > div,
#date-modal > div {
  background-color: var(--nc-header-bg);
  border: 1px solid var(--nc-border-color);
}

#candidate-grid button:not(:disabled):hover {
  background-color: var(--nc-border-color) !important;
}

#date-cancel-btn,
#close-modal-btn {
  background-color: transparent;
  border: 1px solid var(--nc-border-color);
  color: var(--nc-tx-1);
}
#date-cancel-btn:hover,
#close-modal-btn:hover {
  background-color: var(--nc-border-color);
}

/*
================================================================================
|   6. ANIMATIONS                                                              |
================================================================================
*/
@keyframes cell-solve-animation {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

/* Staggered animation when the puzzle is solved */
.is-solved .sudoku-cell {
  background-color: var(--nc-border-color);
  animation: cell-solve-animation 1s ease-in-out;
  animation-delay: calc((var(--row) * 9 + var(--col)) * 20ms);
}

/*
================================================================================
|   7. DARK MODE OVERRIDES                                                     |
================================================================================
*/
@media (prefers-color-scheme: dark) {
  /*
  ------------------------------------------------------------------------------
  |   Part A: Custom Violet Theme Variable Definitions                         |
  |   ------------------------------------------------------------------------ |
  |   These variables provide the specific colors for your custom violet       |
  |   theme when dark mode is active.                                          |
  ------------------------------------------------------------------------------
  */
  :root {
    --nc-bg-1: #1e003a;
    --nc-tx-1: #d8bfd8;
    --nc-header-bg: #272041;
    --nc-border-color: #3b3a5b;
  }

  /*
  ------------------------------------------------------------------------------
  |   Part B: Generic Gray Theme & Base Style Overrides                        |
  |   ------------------------------------------------------------------------ |
  |   This section contains styles for a complete, gray-based theme.           |
  |   NOTE: Because these rules are inside the dark-mode media query, they     |
  |   are more specific than the global styles that use the variables from     |
  |   Part A. This means they will override the custom violet theme,           |
  |   resulting in a gray appearance for the page background, text, cell       |
  |   colors, etc.                                                             |
  ------------------------------------------------------------------------------
  */

  /* --- Base Page & Text Colors (Gray Theme) --- */
  .text-gray-800 {
    color: #f3f4f6 !important; /* gray-100 */
  }
  .text-gray-700 {
    color: #d1d5db !important; /* gray-300 */
  }
  .text-gray-600 {
    color: #9ca3af !important; /* gray-400 */
  }
  .text-gray-500 {
    color: #9ca3af !important; /* gray-400 */
  }
  .border-gray-300 {
    border-color: #4b5563 !important; /* gray-600 */
  }
  .border-gray-700 {
    border-color: #374151 !important; /* gray-700 */
  }

  /* --- Difficulty Lamp (Dark Mode) --- */
  #difficulty-lamp {
    border-color: var(--nc-tx-1);
  }
  .lamp-white {
    background-color: #e5e7eb;
  } /* gray-200 */
  .lamp-green {
    background-color: #22c55e;
  } /* green-500 */
  .lamp-yellow {
    background-color: #eab308;
  } /* yellow-500 */
  .lamp-orange {
    background-color: #f97316;
  } /* orange-500 */
  .lamp-red {
    background-color: #ef4444;
  } /* red-500 */
  .lamp-gray {
    background-color: #6b7280;
  } /* gray-500 */

  /* --- Sudoku Grid (Gray Theme) --- */
  .sudoku-cell {
    border-color: #4b5563 !important; /* gray-600 */
    background-color: #1f2937; /* gray-800 */
    position: relative;
  }
  .sudoku-cell .given-value {
    color: #e5e7eb !important; /* gray-200 */
  }
  .sudoku-cell .user-value {
    color: #60a5fa !important; /* blue-400 */
  }

  .pencil-mark {
    color: var(--color-gray-300);
  }
  /* --- Modals & Info (Gray Theme) --- */
  #date-modal > div,
  #candidate-modal > div {
    background-color: #1f2937 !important; /* gray-800 */
    color: #f3f4f6 !important; /* gray-100 */
    border: 1px solid #4b5563; /* gray-600 */
  }
  #puzzle-info {
    color: #9ca3af !important; /* gray-400 */
  }

  /*
  ------------------------------------------------------------------------------
  |   Part C: Specific Component Adjustments for Dark Mode                     |
  |   ------------------------------------------------------------------------ |
  |   These rules are finer-grained adjustments for specific elements like     |
  |   buttons, highlights, and states.                                         |
  ------------------------------------------------------------------------------
  */

  /* --- Sudoku Cell States & Highlights --- */
  .sudoku-cell.selected {
    outline-color: #3b82f6; /* blue-500 */
  }
  .sudoku-cell.selected-green {
    outline-color: #c084fc; /* violet-400 */
  }
  .sudoku-cell.invalid .user-value {
    background-color: #7f1d1d !important; /* darker red */
    color: #fecaca; /* keep some contrast */
  }
  .is-solved .sudoku-cell {
    background-color: #064e3b !important; /* A dark, muted green */
  }
  .sudoku-cell.highlighted.has-color {
    box-shadow: inset 0 0 0 3px rgba(250, 204, 21, 0.12);
  }
  .sudoku-cell.highlighted:not(.has-color) {
    background-color: #374151; /* gray-700 */
  }
  .sudoku-cell.highlighted.has-color::after {
    border: 3px solid rgba(250, 204, 21, 0.1); /* softer glow */
  }

  /* --- Specific Buttons & Controls --- */
  #auto-pencil-btn {
    background-color: var(--color-indigo-700);
  }
  #auto-pencil-btn:hover {
    background-color: #3730a3;
  }
  #solve-btn {
    background-color: var(--color-green-700);
  }
  #solve-btn:hover {
    background-color: #166534;
  }
  #solver-link-container a {
    background-color: var(--color-orange-700);
  }
  #solver-link-container a:hover {
    background-color: #7c2d12;
  }
  #number-pad button[data-number] {
    background-color: #374151;
    border-color: #4b5563;
    color: #d1d5db;
  }
  #number-pad button[data-number]:hover {
    background-color: #4b5563;
  }
  #undo-btn:hover,
  #redo-btn:hover,
  #clear-btn:hover,
  #clear-colors-btn:hover {
    background-color: #4b5563 !important;
  }
  .color-btn.selected {
    outline: 3px solid var(--color-blue-300) !important;
    outline-offset: 2px;
  }
  #date-cancel-btn,
  #close-modal-btn {
    background-color: #4b5563;
    color: #e5e7eb;
  }
  #date-cancel-btn:hover,
  #close-modal-btn:hover {
    background-color: #374151;
  }

  /* --- Forms & Misc UI --- */
  select {
    background-color: #374151;
    color: #f3f4f6;
    border-color: #4b5563;
  }
  .text-red-600 {
    color: #f87171 !important;
  }
  .shortcut-highlight {
    color: var(--color-orange-500);
  }
  .text-orange-500 {
    color: var(--color-orange-500) !important;
  }
}

/*
================================================================================
|   8. RESPONSIVE STYLES                                                       |
================================================================================
*/
@media (max-width: 550px) {
  /* Adjust main padding for small screens */
  body.p-4 {
    padding-left: 0.25rem;
    padding-right: 0.25rem;
  }
  .bg-white.p-4 {
    padding-left: 0.4rem;
    padding-right: 0.4rem;
  }

  /* Stack puzzle selectors vertically on small screens */
  #puzzle-selectors {
    flex-direction: column; /* Stack the selectors vertically */
    align-items: stretch; /* Make each item take the full width */
    gap: 0.5rem; /* Reduce the gap between them */
  }

  #puzzle-selectors > div {
    /* This makes the label and select box in each row spread apart nicely */
    justify-content: space-between;
  }

  /* Hide shortcut key hints on small screens to save space */
  .shortcut-indicator {
    display: none;
  }

  /* Reduce pencil mark font size to fit smaller cells */
  .pencil-grid {
    font-size: 0.8rem !important;
  }
}
